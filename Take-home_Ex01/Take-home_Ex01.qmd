---
title: "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore"
author: "Yozafard Harold Siauheming"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, 
                      eval = FALSE,
                      message = TRUE,
                      warning = FALSE,
                      fig.retina = 3)
```

#1. Overview ##1.1 Background Human mobility, the movement of human beings in space and time, reflects the spatial-temporal characteristics of human behavior. With the advancement Information and Communication Technologies (ICT) especially smart phone, a large volume of data related to human mobility have been collected. By using appropriate GIS analysis methods, these data are potentially useful in supporting smart city planning and management.

In Singapore, one of the important source of data related to human mobility is from [Land Transport Authority (LTA) DataMall](https://datamall.lta.gov.sg/content/datamall/en.html). Two data sets related to human mobility are provided by the portal, they are: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops. One of the limitation of these data sets is that their location are biased to either bus stops or MRT/LRT stations. In 2020, another very interesting human mobility data set called [Grab Posisi](https://engineering.grab.com/grab-posisi) was released by GRAB, one of the largest shared taxi operator in South-east Asia. There are two data sets been released and one of them is for Singapore.

## 1.2 Objectives

Geospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate spatial point patterns analysis methods to discover the geographical and spatio-temporal distribution of Grab hailing services locations in Singapore.

## 1.3 Tasks

The specific tasks of this take-home exercise are as follows:

-   Using appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:
    -   Grab taxi location points either by origins or destinations.
    -   Road layer within Singapore excluding outer islands.
    -   Singapore boundary layer excluding outer islands

-   Using the extracted data, derive traditional Kernel Density Estimation layers.

-   Using the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE)

-   Using appropriate tmap functions, display the kernel density layers on openstreetmap of Singapore.

-   Describe the spatial patterns revealed by the kernel density maps.

# 2. Packages

The R packages used in this project are: - sf: for importing, managing, and processing geospatial data. - tidyverse: a family of other R packages for performing data science tasks such as importing, wrangling, and visualising data. - tmap: creating thematic maps - maptools: a set of tools for manipulating geographic data - raster: reads, writes, manipulates, analyses, and model gridded spatial data (raster) - spatstat: for performing spatial point patterns analysis - spNetwork: for performing spatial analysis on network - arrow: to read parquet files

We can load these packages with this code chunk:

```{r}
pacman::p_load(sf, spNetwork, tmap, arrow, tidyverse, spatstat, maptools)
```

# 3. Data

Aspatial: - [Grab-Posisi](https://engineering.grab.com/grab-posisi) Singapore

Geospatial: - Road data from OpenStreetMap of Geofabrik download server, - Master Plan 2019 Subzone Boundary (No Sea) [from Data.gov.sg](data.gov.sg)

## 3.1 Loading datasets

### 3.1.1 Grab-Posisi

We can load all the Grab-Posisi datasets with this code chunk:

```{r}
file_list <- list.files('./data/GrabPosisi')

for(i in seq(file_list)) {
  data_name <- paste0('grabposisi', i - 1)
  assign(data_name, read_parquet(paste0('data/GrabPosisi/', file_list[i])))
}

#Combine all datasets
grabposisi <- grabposisi0
```

```{r}
file_list <- list.files('./data/GrabPosisi')
grabposisi <- read_parquet(paste0('data/GrabPosisi/', file_list[1]))
```

Now, we explore the grabposisi data

```{r}
glimpse(grabposisi)
```

We noticed that pingtimestamp is an integer field, so we need to convert pingtimestamp field to a datetime format (POCIXCT)

```{r}
grabposisi$pingtimestamp <- as_datetime(grabposisi$pingtimestamp)
```

Now, we convert it into a geospatial data and add a coordinate reference system

```{r}
grabposisi_sf <- st_as_sf(grabposisi, coords=c("rawlat", "rawlng"))
st_crs(grabposisi_sf)

```

Now we can check how it looks like by plotting it. To make the computations faster, we can take some sample since we are not doing in-depth analysis at this time.

Making the sample:
```{r}
grabposisi_sample <- grabposisi_sf[seq(1, nrow(grabposisi_sf), by = 300), ]
summary(grabposisi_sample)
```

Making the plot:
```{r}
tm_shape(grabposisi_sample) + tm_dots()
```

### 3.1.2 Geospatial Data

Now, we need to load the geospatial data. Let's start with the 2019 Subzone Master Plan

```{r}
mpsz2019_sf <- st_read(dsn='data/Geospatial/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson') |> st_transform(3414)
st_crs(mpsz2019_sf)
```

```{r}
qtm(mpsz2019_sf)
```

After the Master Plan, we can move on to the Road Data Set

```{r}
road_sf <- st_read('data/Geospatial/malaysia-singapore-brunei-latest-free.shp', layer='gis_osm_roads_free_1') |> st_transform(3414)
st_crs(road_sf)
glimpse(road_sf)
```

```{r}
sg_roads <- st_intersection(road_sf |> st_make_valid(), mpsz2019_sf |> st_make_valid())
glimpse(sg_roads)
```

```{r}
road_sample <- road_sf[seq(1, nrow(road_sf), by = 170), ]
```

```{r}
tm_shape(road_sample) + tm_lines()
```

```{r}
tmap_options(check.and.fix = TRUE)
tm_shape(mpsz2019_sf) + tm_polygons() +
tm_shape(road_sample) + tm_lines() +
tm_shape(grabposisi_sample) + tm_dots()
```

## 3.2 Converting to SP and PPP
